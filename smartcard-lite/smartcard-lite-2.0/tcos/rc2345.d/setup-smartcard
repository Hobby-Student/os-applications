#!/usr/bin/python

import subprocess
import os
import time

import pytcos.tcos as tcos
import xml.etree.ElementTree as ET
import xml.dom.minidom as minidom

from subprocess import check_output as output

s = tcos.System()
l = tcos.Ldap()

mac = s.getMac()
ldap_url = s.getLdapUrl()
client_dn = l.getClientDn(mac, ldap_url)
devices_dn = l.getDevicesDn(client_dn, ldap_url)

def kill_daemon(proc):
    proc_obj = subprocess.Popen(["pgrep", proc], stdout=subprocess.PIPE)
    out, err = proc_obj.communicate()
    for pid in out.splitlines():
        os.kill(int(pid), 9)
        time.sleep(1)

def start_daemon(path):
    # end it ...
    prog = path.rsplit('/')[-1] # basename
    kill_daemon(prog)
    # ... before we will start it again
    subprocess.check_call([path])

for d in devices_dn:
    if l.getGroupOfUniqueNamesInfo(d, ldap_url)["schema"] == "smartcard-lite":
        start_daemon('/usr/sbin/pcscd')
    else:
        # not a smartcard reader
        pass
